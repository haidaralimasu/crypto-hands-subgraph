// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BetCreated extends ethereum.Event {
  get params(): BetCreated__Params {
    return new BetCreated__Params(this);
  }
}

export class BetCreated__Params {
  _event: BetCreated;

  constructor(event: BetCreated) {
    this._event = event;
  }

  get _betId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _playerChoice(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get _player(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _betAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _winAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _time(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class CryptoHandsUpdated extends ethereum.Event {
  get params(): CryptoHandsUpdated__Params {
    return new CryptoHandsUpdated__Params(this);
  }
}

export class CryptoHandsUpdated__Params {
  _event: CryptoHandsUpdated;

  constructor(event: CryptoHandsUpdated) {
    this._event = event;
  }

  get _newCryptoHands(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DividerUpdated extends ethereum.Event {
  get params(): DividerUpdated__Params {
    return new DividerUpdated__Params(this);
  }
}

export class DividerUpdated__Params {
  _event: DividerUpdated;

  constructor(event: DividerUpdated) {
    this._event = event;
  }

  get _newDivider(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MaxBetUpdated extends ethereum.Event {
  get params(): MaxBetUpdated__Params {
    return new MaxBetUpdated__Params(this);
  }
}

export class MaxBetUpdated__Params {
  _event: MaxBetUpdated;

  constructor(event: MaxBetUpdated) {
    this._event = event;
  }

  get _newMaxBet(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MinBetUpdated extends ethereum.Event {
  get params(): MinBetUpdated__Params {
    return new MinBetUpdated__Params(this);
  }
}

export class MinBetUpdated__Params {
  _event: MinBetUpdated;

  constructor(event: MinBetUpdated) {
    this._event = event;
  }

  get _newMinBet(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ResultsDeclared extends ethereum.Event {
  get params(): ResultsDeclared__Params {
    return new ResultsDeclared__Params(this);
  }
}

export class ResultsDeclared__Params {
  _event: ResultsDeclared;

  constructor(event: ResultsDeclared) {
    this._event = event;
  }

  get _betId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _choice(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get _outcome(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _winAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _player(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get _result(): i32 {
    return this._event.parameters[6].value.toI32();
  }

  get _time(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RockPaperScissors__s_betsResult {
  value0: BigInt;
  value1: i32;
  value2: i32;
  value3: Address;
  value4: BigInt;
  value5: BigInt;
  value6: i32;

  constructor(
    value0: BigInt,
    value1: i32,
    value2: i32,
    value3: Address,
    value4: BigInt,
    value5: BigInt,
    value6: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set(
      "value6",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value6))
    );
    return map;
  }

  getBetId(): BigInt {
    return this.value0;
  }

  getChoice(): i32 {
    return this.value1;
  }

  getOutcome(): i32 {
    return this.value2;
  }

  getPlayer(): Address {
    return this.value3;
  }

  getAmount(): BigInt {
    return this.value4;
  }

  getWinAmount(): BigInt {
    return this.value5;
  }

  getResult(): i32 {
    return this.value6;
  }
}

export class RockPaperScissors extends ethereum.SmartContract {
  static bind(address: Address): RockPaperScissors {
    return new RockPaperScissors("RockPaperScissors", address);
  }

  getMaxBet(): BigInt {
    let result = super.call("getMaxBet", "getMaxBet():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getMaxBet(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getMaxBet", "getMaxBet():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMinBet(): BigInt {
    let result = super.call("getMinBet", "getMinBet():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getMinBet(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getMinBet", "getMinBet():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  s_bets(param0: BigInt): RockPaperScissors__s_betsResult {
    let result = super.call(
      "s_bets",
      "s_bets(uint256):(uint256,uint8,uint8,address,uint256,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new RockPaperScissors__s_betsResult(
      result[0].toBigInt(),
      result[1].toI32(),
      result[2].toI32(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toI32()
    );
  }

  try_s_bets(
    param0: BigInt
  ): ethereum.CallResult<RockPaperScissors__s_betsResult> {
    let result = super.tryCall(
      "s_bets",
      "s_bets(uint256):(uint256,uint8,uint8,address,uint256,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RockPaperScissors__s_betsResult(
        value[0].toBigInt(),
        value[1].toI32(),
        value[2].toI32(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toI32()
      )
    );
  }

  s_nftWinPercentage(param0: Address): BigInt {
    let result = super.call(
      "s_nftWinPercentage",
      "s_nftWinPercentage(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_s_nftWinPercentage(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "s_nftWinPercentage",
      "s_nftWinPercentage(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _maxBet(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _minBet(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _cryptoHands(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DepositeCall extends ethereum.Call {
  get inputs(): DepositeCall__Inputs {
    return new DepositeCall__Inputs(this);
  }

  get outputs(): DepositeCall__Outputs {
    return new DepositeCall__Outputs(this);
  }
}

export class DepositeCall__Inputs {
  _call: DepositeCall;

  constructor(call: DepositeCall) {
    this._call = call;
  }
}

export class DepositeCall__Outputs {
  _call: DepositeCall;

  constructor(call: DepositeCall) {
    this._call = call;
  }
}

export class MakeBetCall extends ethereum.Call {
  get inputs(): MakeBetCall__Inputs {
    return new MakeBetCall__Inputs(this);
  }

  get outputs(): MakeBetCall__Outputs {
    return new MakeBetCall__Outputs(this);
  }
}

export class MakeBetCall__Inputs {
  _call: MakeBetCall;

  constructor(call: MakeBetCall) {
    this._call = call;
  }

  get _choice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MakeBetCall__Outputs {
  _call: MakeBetCall;

  constructor(call: MakeBetCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateCryptoHandsCall extends ethereum.Call {
  get inputs(): UpdateCryptoHandsCall__Inputs {
    return new UpdateCryptoHandsCall__Inputs(this);
  }

  get outputs(): UpdateCryptoHandsCall__Outputs {
    return new UpdateCryptoHandsCall__Outputs(this);
  }
}

export class UpdateCryptoHandsCall__Inputs {
  _call: UpdateCryptoHandsCall;

  constructor(call: UpdateCryptoHandsCall) {
    this._call = call;
  }

  get _cryptoHands(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateCryptoHandsCall__Outputs {
  _call: UpdateCryptoHandsCall;

  constructor(call: UpdateCryptoHandsCall) {
    this._call = call;
  }
}

export class UpdateDividerCall extends ethereum.Call {
  get inputs(): UpdateDividerCall__Inputs {
    return new UpdateDividerCall__Inputs(this);
  }

  get outputs(): UpdateDividerCall__Outputs {
    return new UpdateDividerCall__Outputs(this);
  }
}

export class UpdateDividerCall__Inputs {
  _call: UpdateDividerCall;

  constructor(call: UpdateDividerCall) {
    this._call = call;
  }

  get _divider(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateDividerCall__Outputs {
  _call: UpdateDividerCall;

  constructor(call: UpdateDividerCall) {
    this._call = call;
  }
}

export class UpdateMaxBetCall extends ethereum.Call {
  get inputs(): UpdateMaxBetCall__Inputs {
    return new UpdateMaxBetCall__Inputs(this);
  }

  get outputs(): UpdateMaxBetCall__Outputs {
    return new UpdateMaxBetCall__Outputs(this);
  }
}

export class UpdateMaxBetCall__Inputs {
  _call: UpdateMaxBetCall;

  constructor(call: UpdateMaxBetCall) {
    this._call = call;
  }

  get _maxBet(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMaxBetCall__Outputs {
  _call: UpdateMaxBetCall;

  constructor(call: UpdateMaxBetCall) {
    this._call = call;
  }
}

export class UpdateMinBetCall extends ethereum.Call {
  get inputs(): UpdateMinBetCall__Inputs {
    return new UpdateMinBetCall__Inputs(this);
  }

  get outputs(): UpdateMinBetCall__Outputs {
    return new UpdateMinBetCall__Outputs(this);
  }
}

export class UpdateMinBetCall__Inputs {
  _call: UpdateMinBetCall;

  constructor(call: UpdateMinBetCall) {
    this._call = call;
  }

  get _minBet(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMinBetCall__Outputs {
  _call: UpdateMinBetCall;

  constructor(call: UpdateMinBetCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
